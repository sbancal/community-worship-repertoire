create table "public"."events" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "date" date not null
);


alter table "public"."events" enable row level security;

create table "public"."repertoire" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "who" bigint not null,
    "event" bigint not null,
    "song" bigint not null
);


alter table "public"."repertoire" enable row level security;

create table "public"."song_books" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "name" text not null default ''::text
);


alter table "public"."song_books" enable row level security;

create table "public"."songs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "song_book" bigint not null,
    "number" bigint not null,
    "title" text not null,
    "verified" boolean not null default false
);


alter table "public"."songs" enable row level security;

create table "public"."users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "full_name" text not null default ''::text
);


alter table "public"."users" enable row level security;

CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id);

CREATE UNIQUE INDEX repertoire_pkey ON public.repertoire USING btree (id);

CREATE UNIQUE INDEX song_books_pkey ON public.song_books USING btree (id);

CREATE UNIQUE INDEX songs_pkey ON public.songs USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."events" add constraint "events_pkey" PRIMARY KEY using index "events_pkey";

alter table "public"."repertoire" add constraint "repertoire_pkey" PRIMARY KEY using index "repertoire_pkey";

alter table "public"."song_books" add constraint "song_books_pkey" PRIMARY KEY using index "song_books_pkey";

alter table "public"."songs" add constraint "songs_pkey" PRIMARY KEY using index "songs_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."repertoire" add constraint "repertoire_event_fkey" FOREIGN KEY (event) REFERENCES events(id) not valid;

alter table "public"."repertoire" validate constraint "repertoire_event_fkey";

alter table "public"."repertoire" add constraint "repertoire_song_fkey" FOREIGN KEY (song) REFERENCES songs(id) not valid;

alter table "public"."repertoire" validate constraint "repertoire_song_fkey";

alter table "public"."repertoire" add constraint "repertoire_who_fkey" FOREIGN KEY (who) REFERENCES users(id) not valid;

alter table "public"."repertoire" validate constraint "repertoire_who_fkey";

alter table "public"."songs" add constraint "songs_song_book_fkey" FOREIGN KEY (song_book) REFERENCES song_books(id) not valid;

alter table "public"."songs" validate constraint "songs_song_book_fkey";


